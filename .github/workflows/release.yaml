#
# utf8lex
# Copyright Â© 2023-2025 Johann Tienhaara
# All rights reserved
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Utf8lex Release

permissions:
  contents: write
  packages: read

#
# Release (on tag semantic versioning style v1.2.3):
# - Download .so libraries from GitHub Packages.
# - Rename each .sha.so library .<version>.so
# - Commit to the dist/ directory under the appropriate architecture (i386 etc).
#
on:
  push:
    tags:
      - v*


#
# See build.yaml for platforms matrix documentation.
#

jobs:
  # ====================================================================
  release:
    runs-on: ubuntu-latest

    env:
      DIST_DIR: ./dist
      UTF8LEX_DOWNLOAD_VERSION: "${{github.sha}}"
      UTF8LEX_RELEASE_TAG: "${{github.ref_name}}"  # git tag v1.2.3
      SHARED_LIBRARY_BASE: "libutf8lex.so"
      PROGRAM_BASE: "utf8lex"

    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4
        #
        # Checkout the main branch, not the tag, in case other
        # GitHub Actions have committed since git tag.
        #
        # https://github.com/actions/checkout
        #
        with:
          # repository: ${{ github.repository }}

          ref: 'main'

          # token: ${{ github.token }}
          # ssh-key: (default)
          # ssh-known-hosts: `ssh-keyscan github.com`
          # ssh-strict: true
          # ssh-user: git
          # persist-credentials: true
          # path: $GITHUB_WORKSPACE
          # clean: true
          # filter: null
          # sparse-checkout: null
          # sparse-checkout-cone-mode: true
          # fetch-depth: 1
          # fetch-tags: false
          # show-progress: true
          # lfs: false
          # submodules: false (true/recursive)
          # set-safe-directory: true
          # github-server-url: 'https://github.com'

      - id: utf8lex-version-env
        name: Set the full utf8lex library and program names, with version
        run: |
            UTF8LEX_RELEASE_VERSION=`echo "${{env.UTF8LEX_RELEASE_TAG}}" \
                                         | sed 's|^v||'`
            echo "UTF8LEX_RELEASE_VERSION=$UTF8LEX_RELEASE_VERSION" \
                >> $GITHUB_ENV
            SHARED_LIBRARY_DOWNLOAD="${{env.SHARED_LIBRARY_BASE}}.${{env.UTF8LEX_DOWNLOAD_VERSION}}"
            echo "SHARED_LIBRARY_DOWNLOAD=$SHARED_LIBRARY_DOWNLOAD" \
                >> $GITHUB_ENV
            SHARED_LIBRARY_RELEASE="${{env.SHARED_LIBRARY_BASE}}.$UTF8LEX_RELEASE_VERSION"
            echo "SHARED_LIBRARY_RELEASE=$SHARED_LIBRARY_RELEASE" \
                >> $GITHUB_ENV
            PROGRAM_DOWNLOAD="${{env.PROGRAM_BASE}}.${{env.UTF8LEX_DOWNLOAD_VERSION}}"
            echo "PROGRAM_DOWNLOAD=$PROGRAM_DOWNLOAD" \
                >> $GITHUB_ENV
            PROGRAM_RELEASE="${{env.PROGRAM_BASE}}.$UTF8LEX_RELEASE_VERSION"
            echo "PROGRAM_RELEASE=$PROGRAM_RELEASE" \
                >> $GITHUB_ENV
            echo "UTF8LEX_RELEASE_VERSION=$UTF8LEX_RELEASE_VERSION"
            echo "SHARED_LIBRARY_DOWNLOAD=$SHARED_LIBRARY_DOWNLOAD"
            echo "SHARED_LIBRARY_RELEASE=$SHARED_LIBRARY_RELEASE"
            echo "PROGRAM_DOWNLOAD=$PROGRAM_DOWNLOAD"
            echo "PROGRAM_RELEASE=$PROGRAM_RELEASE"

      - id: download-all_artifacts
        name: Download utf8lex libraries and programs for all architectures
        # Need a special Action to download artifacts from another workflow:
        # https://github.com/marketplace/actions/download-workflow-artifact
        uses: dawidd6/action-download-artifact@v11
        with:
          github_token: ${{secrets.GITHUB_TOKEN}}
          workflow: build.yaml
          workflow_search: false
          workflow_conclusion: success
          # pr: (use commit)
          commit: ${{env.UTF8LEX_DOWNLOAD_VERSION}}
          # branch: (use commit)
          # ref: (use commit)
          # run_id: (use commit)
          # run_number: (no specific workflow run number)
          # event: (defaults to all event types, e.g. push, etc)
          # name: (all artifacts)
          # name_is_regexp: false
          path: /tmp/utf8lex/
          # repo: (current repo)
          check_artifacts: false
          search_artifacts: false
          skip_unpack: false
          if_no_artifact_found: fail
          allow_forks: false
          use_unzip: false
          merge_multiple: false

      - id: copy-utf8lex
        name: Copy utf8lex binaries to dist directory
        run: |
          for MATRIX_PLATFORM in \
              linux/386 \
              linux/amd64 \
              linux/arm/v7 \
              linux/arm64 \
              linux/mips64le \
              linux/ppc64le \
              linux/s390x
          do
              echo "MATRIX_PLATFORM=$MATRIX_PLATFORM"
              DEBIAN_ARCHITECTURE=`./get_debian_architecture.sh "$MATRIX_PLATFORM"`
              echo "DEBIAN_ARCHITECTURE=$DEBIAN_ARCHITECTURE"
              rm -rf ${{env.DIST_DIR}}/$DEBIAN_ARCHITECTURE
              mkdir -p ${{env.DIST_DIR}}/$DEBIAN_ARCHITECTURE
              cp /tmp/utf8lex/${{env.SHARED_LIBRARY_DOWNLOAD}}.$DEBIAN_ARCHITECTURE \
                  ${{env.DIST_DIR}}/$DEBIAN_ARCHITECTURE/${{env.SHARED_LIBRARY_RELEASE}}
              cp /tmp/utf8lex/${{env.PROGRAM_DOWNLOAD}}.$DEBIAN_ARCHITECTURE \
                  ${{env.DIST_DIR}}/$DEBIAN_ARCHITECTURE/${{env.PROGRAM_RELEASE}}
          done

      #
      # https://github.com/marketplace/actions/add-commit
      #
      - id: commit-release-to-git
        name: Commit release files to git
        uses: EndBug/add-and-commit@v9
        with:
          # Use --no-ignore-removal to remove deleted dist files.
          add: ${{env.DIST_DIR}} --no-ignore-removal

          # author_name: default (author of the git tag).
          # author_email: default (author of the git tag).
          # commit: ''
          # committer_name: (author_name)
          # committer_email: (author_email)
          # cwd: default (.)

          # Determines the way the action fills missing author name and email.
          # Three options are available:
          # - github_actor -> UserName <UserName@users.noreply.github.com>
          # - user_info -> Your Display Name <your-actual@email.com>
          # - github_actions -> github-actions <email associated with the github logo>
          # Default: github_actor
          default_author: github_actor
          fetch: --no-tags --force origin main
          message: "Release ${{env.UTF8LEX_RELEASE_TAG}}"

          # new_branch: (no new branch)

          # The way the action should handle pathspec errors
          # from the add and remove commands. Three options are available:
          # - ignore -> errors will be logged but the step won't fail
          # - exitImmediately -> the action will stop right away,
          #                      and the step will fail
          # - exitAtEnd -> the action will go on, every pathspec error
          #                will be logged at the end, the step will fail.
          # Default: ignore
          pathspec_error_handling: exitImmediately

          pull: '--rebase --autostash'
          push: origin HEAD:main
          # remove: default (do not remove anything)
          tag: ${{env.UTF8LEX_RELEASE_VERSION}}
          tag_push: '--force'
  # --------------------------------------------------------------------
